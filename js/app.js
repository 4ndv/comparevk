riot.tag2("app",'<auth hide="{authorized}"></auth> <virtual show="{authorized}"> <h3>Введите сравниваемые группы или публичные страницы</h3> <div class="alert alert-danger" role="alert" show="{error}">Проверьте введенные сообщества</div> <form onsubmit="{process}" class="form-inline"> <fieldset __disabled="{working}"> <div class="form-group"> <label for="first">vk.com/</label> <input type="text" class="form-control" name="first" id="first" required> </div> <div class="form-group"> <label for="second">vk.com/</label> <input type="text" class="form-control" name="second" id="second" required> </div> <div class="form-group"> <button type="submit" class="btn btn-primary">Сравнить</button> </div> </fieldset> </form> <p>Это может занять некоторое время.</p> </virtual> <virtual if="{found}"> <hr> <div class="row"> <virtual each="{groups}"> <div class="col-md-6"> <div class="media"> <div class="media-left"> <a href="#"> <img class="media-object" riot-src="{photo}"> </a> </div> <div class="media-body"> <h4 class="media-heading">{name}</h4> <div class="progress"> <div class="progress-bar" role="progressbar" riot-style="width: {subs_processed}%;"> {subs_processed}% </div> </div> </div> </div> </div> </virtual> </div> </virtual> <virtual if="{done}"> <hr> <h4>Пересечений: {foundcount}</h4> <div class="media" each="{founditems}"> <div class="media-left"> <a href="#"> <img class="media-object" riot-src="{photo_50}"> </a> </div> <div class="media-body"> <h4 class="media-heading"><a href="https://vk.com/id{id}">{first_name} {last_name}</a></h4> </div> </div> </div> </virtual>',"","",function(opts){var fetch,merge,self;self=this,window.obs.on("auth-success",function(){return self.update({authorized:!0})}),VK.Auth.getLoginStatus(function(r){return"connected"===r.status?window.obs.trigger("auth-success"):void 0}),fetch=function(group){return console.log(group.offset),VK.Api.call("execute.massfetch",{where:group.id,start:group.offset,fields:"photo_50",v:"5.50"},function(r){return console.log(r),r.error?fetch(group):0!==r.response.items.length?(group.total=r.response.count,self.members[group.index]=self.members[group.index].concat(r.response.items),self.groups[group.index].subs_processed=Math.round(group.offset/group.total*100*100)/100,self.update({groups:self.groups}),group.offset+=25e3,fetch(group)):(self.groups[group.index].subs_processed=100,self.finished.push(group),2===self.finished.length?merge():void 0)})},merge=function(){var c,first,firstids,inters,second,secondids;return first=self.members.pop(),second=self.members.pop(),first.length>second.length&&(c=first,first=second,second=c),firstids=first.map(function(item){return item.id}),secondids=second.map(function(item){return item.id}),inters=secondids.filter(function(item){return firstids.indexOf(item)>-1}),console.log(inters),self.founditems=first.filter(function(item){return-1!==inters.indexOf(item.id)}),console.log(self.founditems),self.foundcount=self.founditems.length,self.update({working:null,done:!0})},self.process=function(e){return self.update({error:null,fetcherror:null,working:!0,groups:null,found:null,fetchdone:null,members:[],finished:[],done:null}),VK.Api.call("groups.getById",{group_ids:[self.first.value,self.second.value]},function(r){return r.error||!r.response||2!==r.response.length||self.first.value===self.second.value?self.update({error:!0,working:null}):(console.log(r.response),self.update({found:!0,groups:r.response}),r.response.forEach(function(item,index,array){return self.members[index]=[],fetch({index:index,id:item.gid,offset:0})}))})}}),riot.tag2("auth",'<h3>Авторизация</h3> <p>Авторизуйтесь через VK для продолжения.</p> <a href="#" class="btn btn-primary" role="button" onclick="{auth}">Авторизация</a>',"","",function(opts){var self;self=this,self.auth=function(){return VK.Auth.login(function(response){return response.session?window.obs.trigger("auth-success"):window.obs.trigger("auth-cancelled")})}}),riot.tag2("raw","<span></span>","","",function(opts){this.root.innerHTML=opts.content});